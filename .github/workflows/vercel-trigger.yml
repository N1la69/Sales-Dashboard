name: Force Vercel Deploy

permissions:
  contents: write

on:
  push:
    branches:
    - main
  workflow_dispatch:


jobs:
  trigger-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Configure Git user
      run: |
        git config user.name "${{ secrets.OWNER_NAME }}"
        git config user.email "${{ secrets.OWNER_EMAIL }}"
      env:
        GIT_AUTHOR_NAME: "${{ secrets.OWNER_NAME }}"
        GIT_AUTHOR_EMAIL: "${{ secrets.OWNER_EMAIL }}"
        GIT_COMMITTER_NAME: "${{ secrets.OWNER_NAME }}"
        GIT_COMMITTER_EMAIL: "${{ secrets.OWNER_EMAIL }}"

    - name: Pull latest main branch
      run: |
        git pull --rebase origin main
      env:
        GIT_AUTHOR_NAME: "${{ secrets.OWNER_NAME }}"
        GIT_AUTHOR_EMAIL: "${{ secrets.OWNER_EMAIL }}"
        GIT_COMMITTER_NAME: "${{ secrets.OWNER_NAME }}"
        GIT_COMMITTER_EMAIL: "${{ secrets.OWNER_EMAIL }}"

    - name: Create empty commit to trigger Vercel deploy (if needed)
      run: |
        if ! git log -1 --pretty=%B | grep -q 'chore: trigger vercel deploy'; then
          git commit --allow-empty -m "chore: trigger vercel deploy [ci skip]"
          git push origin main
        else
          echo "Last commit already a deploy trigger, skipping."
        fi
      env:
        GIT_AUTHOR_NAME: "${{ secrets.OWNER_NAME }}"
        GIT_AUTHOR_EMAIL: "${{ secrets.OWNER_EMAIL }}"
        GIT_COMMITTER_NAME: "${{ secrets.OWNER_NAME }}"
        GIT_COMMITTER_EMAIL: "${{ secrets.OWNER_EMAIL }}"
        GIT_ASKPASS: /dev/null
        GIT_TERMINAL_PROMPT: 0
        GITHUB_TOKEN: ${{ secrets.OWNER_TOKEN }}

    - name: Trigger Vercel Deploy
      run: |
        curl -X POST "${{ secrets.VERCEL_DEPLOY_HOOK }}"
