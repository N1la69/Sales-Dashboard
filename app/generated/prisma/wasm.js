
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.13.0
 * Query Engine version: 361e86d0ea4987e9f53a565309b3eed797a6bcbd
 */
Prisma.prismaVersion = {
  client: "6.13.0",
  engine: "361e86d0ea4987e9f53a565309b3eed797a6bcbd"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Psr_dataScalarFieldEnum = {
  psr_id: 'psr_id',
  document_no: 'document_no',
  document_date: 'document_date',
  subbrandform: 'subbrandform',
  customer_name: 'customer_name',
  customer_code: 'customer_code',
  p_code: 'p_code',
  customer_type: 'customer_type',
  category: 'category',
  brand: 'brand',
  brandform: 'brandform',
  retailing: 'retailing'
};

exports.Prisma.Psr_data_tempScalarFieldEnum = {
  psr_id: 'psr_id',
  document_no: 'document_no',
  document_date: 'document_date',
  subbrandform: 'subbrandform',
  customer_name: 'customer_name',
  customer_code: 'customer_code',
  p_code: 'p_code',
  customer_type: 'customer_type',
  category: 'category',
  brand: 'brand',
  brandform: 'brandform',
  retailing: 'retailing'
};

exports.Prisma.Channel_mappingScalarFieldEnum = {
  channel_id: 'channel_id',
  customer_type: 'customer_type',
  base_channel: 'base_channel',
  short_channel: 'short_channel',
  channel_desc: 'channel_desc'
};

exports.Prisma.Store_mappingScalarFieldEnum = {
  Id: 'Id',
  Old_Store_Code: 'Old_Store_Code',
  New_Store_Code: 'New_Store_Code',
  customer_name: 'customer_name',
  customer_type: 'customer_type',
  Branch: 'Branch',
  DSE_Code: 'DSE_Code',
  ZM: 'ZM',
  RSM: 'RSM',
  ASM: 'ASM',
  TSI: 'TSI'
};

exports.Prisma.Product_mappingScalarFieldEnum = {
  Id: 'Id',
  p_code: 'p_code',
  desc_short: 'desc_short',
  category: 'category',
  brand: 'brand',
  brandform: 'brandform',
  subbrandform: 'subbrandform'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  hash: 'hash',
  salt: 'salt',
  role: 'role',
  isActive: 'isActive',
  lastLogin: 'lastLogin',
  image: 'image',
  resetPasswordOTP: 'resetPasswordOTP',
  verificationOTP: 'verificationOTP',
  verificationOTPExpires: 'verificationOTPExpires',
  resetPasswordExpires: 'resetPasswordExpires',
  otpAttempts: 'otpAttempts',
  lastOTPAttemptAt: 'lastOTPAttemptAt',
  otpCooldownUntil: 'otpCooldownUntil'
};

exports.Prisma.PermissionSetScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  page: 'page',
  permissions: 'permissions'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.psr_dataOrderByRelevanceFieldEnum = {
  document_no: 'document_no',
  subbrandform: 'subbrandform',
  customer_name: 'customer_name',
  customer_code: 'customer_code',
  customer_type: 'customer_type',
  category: 'category',
  brand: 'brand',
  brandform: 'brandform'
};

exports.Prisma.psr_data_tempOrderByRelevanceFieldEnum = {
  document_no: 'document_no',
  subbrandform: 'subbrandform',
  customer_name: 'customer_name',
  customer_code: 'customer_code',
  customer_type: 'customer_type',
  category: 'category',
  brand: 'brand',
  brandform: 'brandform'
};

exports.Prisma.channel_mappingOrderByRelevanceFieldEnum = {
  customer_type: 'customer_type',
  base_channel: 'base_channel',
  short_channel: 'short_channel',
  channel_desc: 'channel_desc'
};

exports.Prisma.store_mappingOrderByRelevanceFieldEnum = {
  Old_Store_Code: 'Old_Store_Code',
  New_Store_Code: 'New_Store_Code',
  customer_name: 'customer_name',
  customer_type: 'customer_type',
  Branch: 'Branch',
  DSE_Code: 'DSE_Code',
  ZM: 'ZM',
  RSM: 'RSM',
  ASM: 'ASM',
  TSI: 'TSI'
};

exports.Prisma.product_mappingOrderByRelevanceFieldEnum = {
  desc_short: 'desc_short',
  category: 'category',
  brand: 'brand',
  brandform: 'brandform',
  subbrandform: 'subbrandform'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  name: 'name',
  email: 'email',
  hash: 'hash',
  salt: 'salt',
  role: 'role',
  image: 'image'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.PermissionSetOrderByRelevanceFieldEnum = {
  page: 'page'
};


exports.Prisma.ModelName = {
  psr_data: 'psr_data',
  psr_data_temp: 'psr_data_temp',
  channel_mapping: 'channel_mapping',
  store_mapping: 'store_mapping',
  product_mapping: 'product_mapping',
  User: 'User',
  PermissionSet: 'PermissionSet'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
